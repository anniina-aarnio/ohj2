package kotitalous.test;
// Generated by ComTest BEGIN
import java.io.File;
import java.util.Iterator;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import kotitalous.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.03.28 14:09:56 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class KayttajatTest {



  // Generated by ComTest BEGIN
  /** testLisaa42 */
  @Test
  public void testLisaa42() {    // Kayttajat: 42
    Kayttajat kayttajat = new Kayttajat(); 
    Kayttaja aada = new Kayttaja(), ben = new Kayttaja(); 
    assertEquals("From: Kayttajat line: 45", 0, kayttajat.getLkm()); 
    kayttajat.lisaa(aada); assertEquals("From: Kayttajat line: 46", 1, kayttajat.getLkm()); 
    kayttajat.lisaa(ben); assertEquals("From: Kayttajat line: 47", 2, kayttajat.getLkm()); 
    kayttajat.lisaa(aada); assertEquals("From: Kayttajat line: 48", 3, kayttajat.getLkm()); 
    assertEquals("From: Kayttajat line: 49", aada, kayttajat.anna(0)); 
    assertEquals("From: Kayttajat line: 50", ben, kayttajat.anna(1)); 
    assertEquals("From: Kayttajat line: 51", aada, kayttajat.anna(2)); 
    assertEquals("From: Kayttajat line: 52", false, kayttajat.anna(1) == aada); 
    assertEquals("From: Kayttajat line: 53", true, kayttajat.anna(1) == ben); 
    try {
    assertEquals("From: Kayttajat line: 54", aada, kayttajat.anna(3)); 
    fail("Kayttajat: 54 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    kayttajat.lisaa(aada); assertEquals("From: Kayttajat line: 55", 4, kayttajat.getLkm()); 
    kayttajat.lisaa(aada); assertEquals("From: Kayttajat line: 56", 5, kayttajat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta106 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta106() throws SailoException {    // Kayttajat: 106
    Kayttajat kayttajat = new Kayttajat(); 
    Kayttaja aada1 = new Kayttaja(); aada1.rekisteroi(); aada1.taytaAadaTiedoilla(); 
    Kayttaja aada2 = new Kayttaja(); aada2.rekisteroi(); aada2.taytaAadaTiedoilla(); 
    Kayttaja aada3 = new Kayttaja(); aada3.rekisteroi(); aada3.taytaAadaTiedoilla(); 
    String tiedNimi = "testiKotitalous"; 
    File ftied = new File(tiedNimi + "/kayttajat.dat"); 
    ftied.delete(); 
    try {
    kayttajat.lueTiedostosta(tiedNimi); 
    fail("Kayttajat: 117 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    kayttajat.lisaa(aada1); 
    kayttajat.lisaa(aada2); 
    kayttajat.lisaa(aada3); 
    kayttajat.tallenna(tiedNimi); 
    kayttajat = new Kayttajat(); 
    kayttajat.lueTiedostosta(tiedNimi); 
    Iterator<Kayttaja> i = kayttajat.iterator(); 
    assertEquals("From: Kayttajat line: 125", aada1.toString(), i.next().toString()); 
    assertEquals("From: Kayttajat line: 126", aada2.toString(), i.next().toString()); 
    assertEquals("From: Kayttajat line: 127", aada3.toString(), i.next().toString()); 
    assertEquals("From: Kayttajat line: 128", false, i.hasNext()); 
    kayttajat.lisaa(aada1); 
    kayttajat.tallenna(tiedNimi); 
    assertEquals("From: Kayttajat line: 131", true, ftied.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testIterator179 
   * @throws SailoException when error
   */
  @Test
  public void testIterator179() throws SailoException {    // Kayttajat: 179
    Kayttajat kayttajat = new Kayttajat(); 
    Kayttaja aada1 = new Kayttaja(), aada2 = new Kayttaja(); 
    aada1.rekisteroi(); aada2.rekisteroi(); 
    kayttajat.lisaa(aada1); 
    kayttajat.lisaa(aada2); 
    kayttajat.lisaa(aada1); 
    StringBuffer ids = new StringBuffer(30); 
    for (Kayttaja kayttaja : kayttajat)
    ids.append(" " + kayttaja.getKid()); 
    String tulos = " " + aada1.getKid() + " " + aada2.getKid() + " " + aada1.getKid(); 
    assertEquals("From: Kayttajat line: 196", tulos, ids.toString()); 
    ids = new StringBuffer(30); 
    for (Iterator<Kayttaja> i = kayttajat.iterator(); i.hasNext(); ) {
    Kayttaja k = i.next(); 
    ids.append(" " + k.getKid()); 
    }
    assertEquals("From: Kayttajat line: 204", tulos, ids.toString()); 
    Iterator<Kayttaja> i = kayttajat.iterator(); 
    assertEquals("From: Kayttajat line: 207", true, i.next() == aada1); 
    assertEquals("From: Kayttajat line: 208", true, i.next() == aada2); 
    assertEquals("From: Kayttajat line: 209", true, i.next() == aada1); 
    try {
    i.next(); 
    fail("Kayttajat: 211 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END
}