package kotitalous.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kotitalous.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.04.12 11:58:23 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class KayttajaTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi41 */
  @Test
  public void testRekisteroi41() {    // Kayttaja: 41
    Kayttaja aku1 = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 43", 0, aku1.getKid()); 
    aku1.rekisteroi(); 
    Kayttaja aku2 = new Kayttaja(); 
    aku2.rekisteroi(); 
    int n1 = aku1.getKid(); 
    int n2 = aku2.getKid(); 
    assertEquals("From: Kayttaja line: 49", n2-1, n1); 
    assertEquals("From: Kayttaja line: 50", n1+1, n2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetKid63 */
  @Test
  public void testGetKid63() {    // Kayttaja: 63
    Kayttaja aku1 = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 65", 0, aku1.getKid()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetNimi87 */
  @Test
  public void testSetNimi87() {    // Kayttaja: 87
    Kayttaja k = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 89", null, k.setNimi("Minna")); 
    assertEquals("From: Kayttaja line: 90", "Nimi ei saa olla tyhjä", k.setNimi("")); 
    assertEquals("From: Kayttaja line: 91", "Minna", k.getNimi()); 
    assertEquals("From: Kayttaja line: 92", "Nimi ei saa olla tyhjä", k.setNimi(null)); 
    assertEquals("From: Kayttaja line: 93", "Merkki | ei ole sallittu", k.setNimi("Minna | Mikkonen")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetIka127 */
  @Test
  public void testSetIka127() {    // Kayttaja: 127
    Kayttaja k = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 129", null, k.setIka("14")); 
    assertEquals("From: Kayttaja line: 130", "Iän tulee olla vähintään 0", k.setIka("")); 
    assertEquals("From: Kayttaja line: 131", 14, k.getIka()); 
    assertEquals("From: Kayttaja line: 132", "Vääriä merkkejä, käytä vain kokonaislukuja", k.setIka("a")); 
    assertEquals("From: Kayttaja line: 133", "Vääriä merkkejä, käytä vain kokonaislukuja", k.setIka("01")); 
    assertEquals("From: Kayttaja line: 134", "Yli 100-vuotiaan ei tarvitse tehdä kotitöitä", k.setIka("100")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse182 */
  @Test
  public void testParse182() {    // Kayttaja: 182
    Kayttaja kayttaja = new Kayttaja(); 
    kayttaja.parse("   3   | Aada     | 35   "); 
    assertEquals("From: Kayttaja line: 185", 3, kayttaja.getKid()); 
    assertEquals("From: Kayttaja line: 186", true, kayttaja.toString().startsWith("3|Aada|35")); 
    kayttaja.rekisteroi(); 
    int n = kayttaja.getKid(); 
    kayttaja.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    kayttaja.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Kayttaja line: 192", n+20+1, kayttaja.getKid()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString207 */
  @Test
  public void testToString207() {    // Kayttaja: 207
    Kayttaja aada = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 209", "0||0", aada.toString()); 
  } // Generated by ComTest END
}