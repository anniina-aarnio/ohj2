package kotitalous.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kotitalous.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.04.23 14:09:23 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class KayttajaTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi42 */
  @Test
  public void testRekisteroi42() {    // Kayttaja: 42
    Kayttaja aku1 = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 44", 0, aku1.getKid()); 
    aku1.rekisteroi(); 
    Kayttaja aku2 = new Kayttaja(); 
    aku2.rekisteroi(); 
    int n1 = aku1.getKid(); 
    int n2 = aku2.getKid(); 
    assertEquals("From: Kayttaja line: 50", n2-1, n1); 
    assertEquals("From: Kayttaja line: 51", n1+1, n2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetKid64 */
  @Test
  public void testGetKid64() {    // Kayttaja: 64
    Kayttaja aku1 = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 66", 0, aku1.getKid()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta128 */
  @Test
  public void testAseta128() {    // Kayttaja: 128
    Kayttaja kayttaja = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 130", "Nimi ei saa olla tyhjä", kayttaja.aseta(1, "")); 
    assertEquals("From: Kayttaja line: 131", "Merkki | ei ole sallittu", kayttaja.aseta(1, "Aada |")); 
    assertEquals("From: Kayttaja line: 132", null, kayttaja.aseta(1, "Aada")); 
    assertEquals("From: Kayttaja line: 133", "Anna positiivinen kokonaisluku", kayttaja.aseta(2, "kissa")); 
    assertEquals("From: Kayttaja line: 134", "Yli 100-vuotias saa levätä", kayttaja.aseta(2, "100")); 
    assertEquals("From: Kayttaja line: 135", "Anna positiivinen kokonaisluku", kayttaja.aseta(2, "02")); 
    assertEquals("From: Kayttaja line: 136", "Anna positiivinen kokonaisluku", kayttaja.aseta(2, "-1")); 
    assertEquals("From: Kayttaja line: 137", "Anna positiivinen kokonaisluku", kayttaja.aseta(2, "0")); 
    assertEquals("From: Kayttaja line: 138", null, kayttaja.aseta(2, "1")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse218 */
  @Test
  public void testParse218() {    // Kayttaja: 218
    Kayttaja kayttaja = new Kayttaja(); 
    kayttaja.parse("   3   | Aada     | 35   "); 
    assertEquals("From: Kayttaja line: 221", 3, kayttaja.getKid()); 
    assertEquals("From: Kayttaja line: 222", true, kayttaja.toString().startsWith("3|Aada|35")); 
    kayttaja.rekisteroi(); 
    int n = kayttaja.getKid(); 
    kayttaja.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    kayttaja.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Kayttaja line: 228", n+20+1, kayttaja.getKid()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString243 */
  @Test
  public void testToString243() {    // Kayttaja: 243
    Kayttaja aada = new Kayttaja(); 
    assertEquals("From: Kayttaja line: 245", "0||0", aada.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals262 */
  @Test
  public void testEquals262() {    // Kayttaja: 262
    Kayttaja k1 = new Kayttaja(); 
    k1.parse(" 2  |   Aada | 23  "); 
    Kayttaja k2 = new Kayttaja(); 
    k2.parse(" 3  | Ben     | 2"); 
    Kayttaja k3 = new Kayttaja(); 
    k3.parse("  3 |   Ben | 2"); 
    assertEquals("From: Kayttaja line: 270", false, k1.equals(k2)); 
    assertEquals("From: Kayttaja line: 271", false, k2.equals(k1)); 
    assertEquals("From: Kayttaja line: 272", false, k1.equals(k3)); 
    assertEquals("From: Kayttaja line: 273", true, k2.equals(k3)); 
    assertEquals("From: Kayttaja line: 274", true, k3.equals(k3)); 
  } // Generated by ComTest END
}